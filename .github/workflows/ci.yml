name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install libs
        run: forge install

      - name: Check formatting
        run: forge fmt --check

      # âœ… Build WITH build-info so Slither can parse artifacts
      - name: Build (with build-info for Slither)
        run: |
          forge clean
          forge build --build-info --build-info-path out/build-info

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Slither 0.11.3
        run: |
          python -m pip install --upgrade pip
          pip install slither-analyzer==0.11.3

      - name: Slither (src, Foundry artifacts + config)
        run: |
          slither src \
            --config-file ./.slither.json \
            --foundry-ignore-compile \
            --foundry-out-directory out \
            --exclude-dependencies \
            --sarif slither.sarif

      - name: Upload Slither SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: |
          always() && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository))
        with:
          sarif_file: slither.sarif

      - name: Upload SARIF as artifact (fallback for forks)
        if: |
          always() && github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
        uses: actions/upload-artifact@v4
        with:
          name: slither-sarif
          path: slither.sarif

      - name: Gas snapshot
        run: |
          forge snapshot
          git diff --exit-code gas-snapshot || (echo "gas-snapshot changed; commit updated snapshot" && exit 1)

      - name: Coverage
        run: forge coverage --report lcov
